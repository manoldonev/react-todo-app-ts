{"version":3,"file":"static/js/144.499a356d.chunk.js","mappings":"yMACMA,EAAQ,CACZ,CACEC,GAAI,IACJC,KAAM,eACNC,MAAM,GAER,CACEF,GAAI,IACJC,KAAM,gGACNC,MAAM,GAER,CACEF,GAAI,IACJC,KAAM,gFACNC,MAAM,GAER,CACEF,GAAI,IACJC,KAAM,8DACNC,MAAM,GAER,CACEF,GAAI,IACJC,KAAM,sCACNC,MAAM,GAER,CACEF,GAAI,IACJC,KAAM,0GACNC,MAAM,GAER,CACEF,GAAI,IACJC,KAAM,0EACNC,MAAM,GAER,CACEF,GAAI,IACJC,KAAM,+DACNC,MAAM,GAER,CACEF,GAAI,IACJC,KAAM,2CACNC,MAAM,GAER,CACEF,GAAI,KACJC,KAAM,wDACNC,MAAM,GAER,CACEF,GAAI,KACJC,KAAM,wEACNC,MAAM,GAER,CACEF,GAAI,KACJC,KAAM,+CACNC,MAAM,GAER,CACEF,GAAI,KACJC,KAAM,mGACNC,MAAM,GAER,CACEF,GAAI,KACJC,KAAM,6DACNC,MAAM,GAER,CACEF,GAAI,KACJC,KAAM,yEACNC,MAAM,GAER,CACEF,GAAI,KACJC,KAAM,uDACNC,MAAM,GAER,CACEF,GAAI,KACJC,KAAM,sGACNC,MAAM,GAER,CACEF,GAAI,KACJC,KAAM,6EACNC,MAAM,GAER,CACEF,GAAI,KACJC,KAAM,qFACNC,MAAM,GAER,CACEF,GAAI,KACJC,KAAM,+GACNC,MAAM,GAER,CACEF,GAAI,KACJC,KAAM,gEACNC,MAAM,GAER,CACEF,GAAI,KACJC,KAAM,kDACNC,MAAM,GAER,CACEF,GAAI,KACJC,KAAM,qFACNC,MAAM,GAER,CACEF,GAAI,KACJC,KAAM,8CACNC,MAAM,GAER,CACEF,GAAI,KACJC,KAAM,+BACNC,MAAM,GAER,CACEF,GAAI,KACJC,KAAM,4BACNC,MAAM,GAER,CACEF,GAAI,KACJC,KAAM,4EACNC,MAAM,GAER,CACEF,GAAI,KACJC,KAAM,4BACNC,MAAM,GAER,CACEF,GAAI,KACJC,KAAM,0BACNC,MAAM,GAER,CACEF,GAAI,KACJC,KAAM,wCACNC,MAAM,GAER,CACEF,GAAI,KAC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","sources":["mocks/msw/todos.ts","mocks/msw/handlers.ts","mocks/msw/browser.ts"],"sourcesContent":["// TODO: replace hardcoded mock data with @mswjs/data & faker combination\nconst todos = [\n  {\n    id: '1',\n    task: 'Get the milk',\n    done: true,\n  },\n  {\n    id: '2',\n    task: 'Waking to the buzz of the alarm clock, their blackberry was, in this moment, a sincere rabbit',\n    done: true,\n  },\n  {\n    id: '3',\n    task: 'Quoting with intend: \"The camels could be said to resemble sympathetic limes;',\n    done: true,\n  },\n  {\n    id: '4',\n    task: \"Few can name an energetic turtle that isn't a credible bear\",\n    done: true,\n  },\n  {\n    id: '5',\n    task: 'An octopus is the chicken of a bird',\n    done: false,\n  },\n  {\n    id: '6',\n    task: 'In his own words: \"It\\'s very tricky, if not impossible, the camel of an apple becomes a helpful prune.',\n    done: true,\n  },\n  {\n    id: '7',\n    task: 'Extending this logic, charming kangaroos show us how bears can be pears',\n    done: true,\n  },\n  {\n    id: '8',\n    task: 'Washing and polishing the car,snails are resolute persimmons',\n    done: false,\n  },\n  {\n    id: '9',\n    task: 'A hippopotamus is the turtle of a spider',\n    done: false,\n  },\n  {\n    id: '10',\n    task: 'Alluring bananas show us how crocodiles can be melons',\n    done: false,\n  },\n  {\n    id: '11',\n    task: 'A seal of the blueberry is assumed to be a self-disciplined persimmon',\n    done: false,\n  },\n  {\n    id: '12',\n    task: 'One cannot separate cows from punctual limes',\n    done: false,\n  },\n  {\n    id: '13',\n    task: 'If this was somewhat unclear, they were lost without the modest lobster that composed their goat',\n    done: false,\n  },\n  {\n    id: '14',\n    task: 'A shark of the camel is assumed to be a resolute cranberry',\n    done: false,\n  },\n  {\n    id: '15',\n    task: 'Congratulations to the wolf that won the discreet lobster with a peach',\n    done: false,\n  },\n  {\n    id: '16',\n    task: 'The cooperative cranberry comes from a fearless duck',\n    done: false,\n  },\n  {\n    id: '17',\n    task: 'As far as we can estimate, a comfortable scorpion without lemons is truly a orange of talented rats',\n    done: true,\n  },\n  {\n    id: '18',\n    task: 'Quoting with intend: \"The dogs could be said to resemble humorous spiders.',\n    done: true,\n  },\n  {\n    id: '19',\n    task: 'In her own words: \"Some posit the communicative deer to be less than kind-hearted.',\n    done: false,\n  },\n  {\n    id: '20',\n    task: 'The zeitgeist contends that we can assume that any instance of an eagle can be construed as a helpful turtle',\n    done: false,\n  },\n  {\n    id: '21',\n    task: 'Some posit the exclusive octopus to be less than intellectual',\n    done: true,\n  },\n  {\n    id: '22',\n    task: 'Good ducks show us how plums can be raspberries',\n    done: false,\n  },\n  {\n    id: '23',\n    task: 'We can assume that any instance of a rat can be construed as a talented grapefruit',\n    done: false,\n  },\n  {\n    id: '24',\n    task: 'One cannot separate peaches from loyal pigs',\n    done: true,\n  },\n  {\n    id: '25',\n    task: 'Kittens are persistent seals',\n    done: true,\n  },\n  {\n    id: '26',\n    task: \"A seal is a currant's dog\",\n    done: false,\n  },\n  {\n    id: '27',\n    task: 'An obedient puppy without lobsters is truly a deer of communicative flies',\n    done: false,\n  },\n  {\n    id: '28',\n    task: 'Kittens are careful pears',\n    done: true,\n  },\n  {\n    id: '29',\n    task: 'A spider is a calm lion',\n    done: false,\n  },\n  {\n    id: '30',\n    task: 'However, apricots are determined cats',\n    done: false,\n  },\n  {\n    id: '31',\n    task: 'Hamsters are pioneering snails',\n    done: true,\n  },\n  {\n    id: '32',\n    task: 'The zeitgeist contends that the chimpanzee is a melon',\n    done: false,\n  },\n  {\n    id: '33',\n    task: 'In his own words: \"We know that the dolphins could be said to resemble plausible giraffes?',\n    done: false,\n  },\n  {\n    id: '34',\n    task: 'Congratulations to the dog that won the philosophical elephant with a seal',\n    done: false,\n  },\n  {\n    id: '35',\n    task: 'A camel of the kangaroo is assumed to be a talented turtle',\n    done: true,\n  },\n  {\n    id: '36',\n    task: 'In his own words: \"Some posit the cooperative squirrel to be less than vivacious;',\n    done: false,\n  },\n  {\n    id: '37',\n    task: 'We can assume that any instance of a squirrel can be construed as a sensitive cheetah',\n    done: true,\n  },\n  {\n    id: '38',\n    task: 'Yelling: \"A watermelon is a chicken from the right perspective.',\n    done: true,\n  },\n  {\n    id: '39',\n    task: 'In his own words: \"Though we assume the latter, the literature would have us believe that a passionate kumquat is not but a grape.',\n    done: true,\n  },\n  {\n    id: '40',\n    task: \"Few can name a versatile grape that isn't an exclusive fox\",\n    done: false,\n  },\n  {\n    id: '41',\n    task: 'A squirrel sees a horse as a talented spider',\n    done: true,\n  },\n  {\n    id: '42',\n    task: 'A panda is the dog of a kangaroo',\n    done: false,\n  },\n  {\n    id: '43',\n    task: 'The literature would have us believe that an amiable kitten is not but an apple',\n    done: false,\n  },\n  {\n    id: '44',\n    task: \"This could be, or perhaps an ambitious lion's raspberry comes with it the thought that the sociable alligator is a camel\",\n    done: false,\n  },\n  {\n    id: '45',\n    task: 'The determined shark reveals itself as a fantastic strawberry to those who look',\n    done: false,\n  },\n  {\n    id: '46',\n    task: 'The modest cranberry comes from a steadfast hamster',\n    done: false,\n  },\n  {\n    id: '47',\n    task: 'This could be, or perhaps we can assume that any instance of an orange can be construed as a honorable wolf',\n    done: false,\n  },\n  {\n    id: '48',\n    task: 'Some fair-minded bears are thought of simply as oranges',\n    done: false,\n  },\n  {\n    id: '49',\n    task: 'Backup the MacBook',\n    done: false,\n  },\n  {\n    id: '69',\n    task: 'Write the damn resolver!',\n    done: false,\n  },\n];\n\nexport { todos };\n","import {\n  mockCreateTodoMutation,\n  mockDeleteTodoMutation,\n  mockTodosQuery,\n  mockUpdateTodoMutation,\n} from '../../generated';\nimport { todos } from './todos';\n\nconst pageIndex = 1;\nconst pageSize = 10;\n\nexport const handlers = [\n  mockTodosQuery((req, res, ctx) => {\n    const { page, limit, input } = req.variables;\n    const start = ((page ?? pageIndex) - 1) * (limit ?? pageSize);\n    const end = start + (limit ?? pageSize);\n\n    let items = [...todos];\n    const taskContains = input?.task_contains ?? '';\n    if (taskContains !== '') {\n      items = items.filter((todo) => todo.task.includes(taskContains));\n    }\n\n    return res(\n      ctx.data({\n        todos: items.reverse().slice(start, end),\n      }),\n    );\n  }),\n\n  mockCreateTodoMutation((req, res, ctx) => {\n    const { task, done } = req.variables.input;\n    let id = '1';\n    if (todos.length > 0) {\n      id = (parseInt(todos[todos.length - 1].id, 10) + 1).toString();\n    }\n\n    todos.push({ id, task, done });\n\n    return res(ctx.data({ createTodo: todos[todos.length - 1] }));\n  }),\n\n  mockUpdateTodoMutation((req, res, ctx) => {\n    const { id, input } = req.variables;\n    const todoItem = todos.find((todo) => todo.id === id);\n    if (todoItem == null) {\n      throw new Error(`Mock update failed for item id ${id}`);\n    }\n\n    todoItem.done = input.done ?? false;\n    return res(ctx.data({ updateTodo: todoItem }));\n  }),\n\n  mockDeleteTodoMutation((req, res, ctx) => {\n    const { id } = req.variables;\n    const itemIndex = todos.findIndex((todo) => todo.id === id);\n    if (itemIndex === -1) {\n      throw new Error(`Mock delete failed for item id ${id}`);\n    }\n\n    todos.splice(itemIndex, 1);\n\n    return res(ctx.data({ deleteTodo: id }));\n  }),\n];\n","import { setupWorker } from 'msw';\nimport { handlers } from './handlers';\n\nexport const worker = setupWorker(...handlers);\n"],"names":["todos","id","task","done","handlers","mockTodosQuery","req","res","ctx","variables","page","limit","input","start","end","items","taskContains","task_contains","filter","todo","includes","data","reverse","slice","mockCreateTodoMutation","length","parseInt","toString","push","createTodo","mockUpdateTodoMutation","todoItem","find","Error","updateTodo","mockDeleteTodoMutation","itemIndex","findIndex","splice","deleteTodo","worker","setupWorker"],"sourceRoot":""}